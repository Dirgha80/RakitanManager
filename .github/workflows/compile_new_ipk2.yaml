name: Compile The New Version RakitanManager V2

on: 
  #push:
  #  branches:
  #    - dev
  #  paths:
  #    - 'luci-app-rakitanmanager/Makefile'
  workflow_dispatch:
    inputs:
      revision:
        description: "Revision IPK"
        required: false
        default: false
        type: boolean

jobs:
  Get-Version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
      current_version: ${{ steps.current_version.outputs.version }}
    steps:
      - name: Clone Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}

      - name: New Version
        id: version
        run: |
          echo "version=$(grep 'PKG_VERSION:=' ./luci-app-rakitanmanager/Makefile |awk -F '=' '{print $2}')" >> $GITHUB_OUTPUT
          echo "New Version: $(grep 'PKG_VERSION:=' ./luci-app-rakitanmanager/Makefile |awk -F '=' '{print $2}')"

      - name: Clone Repository
        uses: actions/checkout@v4
        with:
          ref: package

      - name: Current Version
        id: current_version
        run: |
          echo "version=$(sed -n 1p ./${{ github.ref_name }}/version |awk -F '-' '{print $1}' |awk -F 'v' '{print $2}')" >> $GITHUB_OUTPUT
          echo "Current Version: $(sed -n 1p ./${{ github.ref_name }}/version |awk -F '-' '{print $1}' |awk -F 'v' '{print $2}')"

  Compile:
    runs-on: ubuntu-latest
    needs: Get-Version
    if: ${{ github.event.inputs.revision == 'true' || needs.Get-Version.outputs.version != needs.Get-Version.outputs.current_version }}
    steps:
      - name: Clone RakitanManager dev Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}

      - name: Apt Update
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt-get update
          sudo apt-get -y install curl git tar

      - name: Install OpenWrt SDK
        run: |
          cd ..
          mkdir tmp
          curl -SLk --connect-timeout 30 --retry 2 "https://archive.openwrt.org/chaos_calmer/15.05.1/ar71xx/generic/OpenWrt-SDK-15.05.1-ar71xx-generic_gcc-4.8-linaro_uClibc-0.9.33.2.Linux-x86_64.tar.bz2" -o "./tmp/SDK.tar.bz2"
          cd \tmp
          tar xjf SDK.tar.bz2
          mv "OpenWrt-SDK-15.05.1-ar71xx-generic_gcc-4.8-linaro_uClibc-0.9.33.2.Linux-x86_64" "SDK"

      - name: Copy RakitanManager Source Codes
        run: |
          cd ..
          mkdir tmp/SDK/package/luci-app-rakitanmanager
          cp -rf "./RakitanManager/luci-app-rakitanmanager/." "./tmp/SDK/package/luci-app-rakitanmanager/"

      - name: Compile RakitanManager IPK
        run: |
          cd ..
          cd tmp/SDK
          make package/luci-app-rakitanmanager/compile V=99
        
      - name: Add changelog info to new release description
        id: changelog
        shell: bash
        run: |
          cd /home/runner/work/RakitanManager/RakitanManager/
          r=$(awk '/^\*\*Changelog\*\*/ {if(found) exit; found=1} found' CHANGELOG.md)
          r="${r//'%'/'%25'}"
          r="${r//$'\n'/'%0A'}"
          r="${r//$'\r'/'%0D'}"  
          echo "CHANGELOG=$r" >> $GITHUB_OUTPUT 

      - name: Generate new tag & release
        uses: softprops/action-gh-release@v2.0.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          make_latest: "true"
          prerelease: false
          files: "./tmp/SDK/bin/ar71xx/packages/base/luci-app-rakitanmanager_${{ needs.Get-Version.outputs.version }}-beta_all.ipk"
          tag_name: "v${{ needs.Get-Version.outputs.version }}-beta"
          body: |
            <h1 align="center">
            <br>RakitanManager<br>
            
            </h1>
              
            <p align="center">
            <a target="_blank" href="https://github.com/rtaserver/RakitanManager/tree/v${{ needs.Get-Version.outputs.version }}-beta">
                <img src="https://img.shields.io/badge/source code-v${{ needs.Get-Version.outputs.version }}--beta-green.svg">
            </a>
              <a target="_blank" href="https://github.com/rtaserver/RakitanManager/releases/tag/v${{ needs.Get-Version.outputs.version }}-beta">
                <img src="https://img.shields.io/badge/New Release-v${{ needs.Get-Version.outputs.version }}--beta-orange.svg">
              </a>
            </p>
              
            Installasi
            ---
              
              
            Menggunakan Terminal OpenWrt / TTYD / PuTTY
            ```bash
            # Copy Script Di Bawah Dan Paste Di Terminal
            bash -c "$(wget -qO - 'https://raw.githubusercontent.com/rtaserver/RakitanManager/dev/install.sh')"
            ```
              
            Manual Installasi
            ```
            1. Download File IPK
            2. Install Beberapa Paket Yang Di Butuhkan Di Menu Software
               Jangan Lupa Update List
               - modemmanager
               - python3-pip
               - jq
               - curl
               - adb
            3. Install Paket Python di Terminal OpenWrt / TTYD / PuTTY
               - pip3 install requests
               - pip3 install huawei-lte-api
               Paste Satu Satu Di Atas Ke Terminal
            4. Upload IPK Yang Sudah Di Download Ke Menu Software
               Upload Packages. Kemudian Upload Dan Install
            5. Atau Upload IPK Ke Folder Root OpeWrt
               Kemudian Jalankan Perintah Ini Di Terminal
               - opkg install /luci-app-rakitanmanager_*.ipk --force-reinstall
            ```
              
            lisensi
            ---
              
              
            * [Apache License](https://github.com/rtaserver/RakitanManager/blob/main/LICENSE)
            * pip3 [huawei-lte-api](https://github.com/Salamek/huawei-lte-api) by [Salamek](https://github.com/Salamek)

      - name: Switch RakitanManager Repository to Package
        uses: actions/checkout@v4
        with:
          ref: package

      - name: Commit and Push New Version
        run: |
          echo "${{ steps.changelog.outputs.CHANGELOG }}" > ./${{ github.ref_name }}/changelog.txt
          rm -rf ./${{ github.ref_name }}/luci-app-rakitanmanager_*
          echo "v${{ needs.Get-Version.outputs.version }}-beta" > ./${{ github.ref_name }}/version
          echo "https://img.shields.io/badge/New Release-v${{ needs.Get-Version.outputs.version }}--beta-orange.svg" >> ./${{ github.ref_name }}/version
          cd ..
          cp "./tmp/SDK/bin/ar71xx/packages/base/luci-app-rakitanmanager_${{ needs.Get-Version.outputs.version }}-beta_all.ipk" "./RakitanManager/${{ github.ref_name }}/luci-app-rakitanmanager_${{ needs.Get-Version.outputs.version }}-beta_all.ipk"
          sed -i -E "s/RakitanManager\/tree\/v(.*)-beta/RakitanManager\/tree\/v${{ needs.Get-Version.outputs.version }}-beta/g" ./RakitanManager/${{ github.ref_name }}/README.md
          sed -i -E "s/RakitanManager\/releases\/tag\/v(.*)-beta/RakitanManager\/releases\/tag\/v${{ needs.Get-Version.outputs.version }}-beta/g" ./RakitanManager/${{ github.ref_name }}/README.md
          sed -i -E "s/source code-v(.*)--beta-green/source code-v${{ needs.Get-Version.outputs.version }}--beta-green/g" ./RakitanManager/${{ github.ref_name }}/README.md
          sed -i -E "s/New Release-v(.*)--beta-orange/New Release-v${{ needs.Get-Version.outputs.version }}--beta-orange/g" ./RakitanManager/${{ github.ref_name }}/README.md
          cd \RakitanManager
          HASH=$(sha256sum "./dev/luci-app-rakitanmanager_${{ needs.Get-Version.outputs.version }}-beta_all.ipk" | awk '{print $1}')
          echo "$HASH" > ./dev/hash.txt
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'
          git add .
          git commit -m "Auto Release: v${{ needs.Get-Version.outputs.version }}-beta"
          git push